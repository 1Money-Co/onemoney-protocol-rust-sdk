# GitLeaks configuration for OneMoney Rust SDK
# General configuration: All addresses, private keys, hashes in test files and documentation are considered non-sensitive test data

# Global path-based exclusion rules - all keys in test environments are non-sensitive
[allowlist]
description = "Test files and documentation - all crypto values are test vectors"
paths = [
    # Test files - all crypto values are test vectors
    "**/tests/**",
    "**/test/**",
    "**/*test*.rs",
    "**/*_test.rs",
    "tests/*.rs",

    # Examples and documentation - all included keys are example data
    "**/examples/**",
    "**/*example*.rs",
    "examples/*.rs",
    "README.md",
    "**/*.md",

    # Crypto module tests - contain standard test vectors
    "src/crypto/**",

    # API documentation examples
    "src/api/**",

    # Common test data
    "**/common.rs",
    "**/mock*.rs",
]

# Generic regex rules - identify obvious test patterns
[[rules]]
id = "obvious-test-patterns"
description = "Obvious test patterns - hex values containing repeated sequences or obvious test identifiers"
[rules.allowlist]
regexes = [
    # Hex values containing obvious test sequences
    '''0x[0-9a-fA-F]*1234567890abcdef[0-9a-fA-F]*''',
    '''0x[0-9a-fA-F]*abcdef1234567890[0-9a-fA-F]*''',
    '''0x[0-9a-fA-F]*1234abcd[0-9a-fA-F]*''',
    '''0x[0-9a-fA-F]*deadbeef[0-9a-fA-F]*''',
    '''0x[0-9a-fA-F]*cafebabe[0-9a-fA-F]*''',

    # Repeated patterns (like 1111..., 2222..., aaaa... etc)
    '''0x([0-9a-fA-F])\1{7,}''',  # 8 or more identical characters
    '''0x1{8,}''',                # Consecutive 1s
    '''0x0{8,}''',                # Consecutive 0s
    '''0x[fF]{8,}''',             # Consecutive fs

    # Incremental sequence patterns
    '''0x123456789[0-9a-fA-F]*''',
    '''0xabcdef[0-9a-fA-F]*''',
]

[[rules]]
id = "test-environment-crypto"
description = "All crypto values in test environments are safe"
[rules.allowlist]
paths = [
    '''.*test.*''',
    '''.*example.*''',
    '''.*mock.*''',
    '''.*\.md$''',
    '''src/crypto/.*''',
]
regexes = [
    # Any values identified by comments as test vectors
    '''(?i).*test.*vector.*0x[0-9a-fA-F]{40,}''',
    '''(?i).*test.*key.*0x[0-9a-fA-F]{40,}''',
    '''(?i).*example.*0x[0-9a-fA-F]{40,}''',
    '''(?i).*non-sensitive.*0x[0-9a-fA-F]{40,}''',
    '''(?i).*placeholder.*0x[0-9a-fA-F]{40,}''',
]

[[rules]]
id = "documentation-examples"
description = "All hex values in documentation and examples are sample data"
[rules.allowlist]
paths = [
    '''.*\.md$''',
    '''.*\.rs$''',
]
regexes = [
    # Address examples in documentation (20 bytes = 40 hex characters)
    '''0x[0-9a-fA-F]{40}''',

    # Private key examples (32 bytes = 64 hex characters)
    '''0x[0-9a-fA-F]{64}''',

    # Hash value examples (32 bytes = 64 hex characters)
    '''0x[0-9a-fA-F]{64}''',

    # Transaction hashes etc (variable length)
    '''0x[0-9a-fA-F]{8,}''',
]

[[rules]]
id = "environment-variables"
description = "Environment variable examples"
[rules.allowlist]
regexes = [
    '''ONEMONEY_.*=.*''',
    '''export ONEMONEY_.*''',
    '''process\.env\.ONEMONEY_.*''',
]

[[rules]]
id = "code-comments-and-strings"
description = "Test data in code comments and strings"
[rules.allowlist]
regexes = [
    # Hex values in string literals (surrounded by quotes)
    '''"0x[0-9a-fA-F]+"''',
    """'0x[0-9a-fA-F]+'""",

    # Hex values in comments
    '''//.*0x[0-9a-fA-F]+''',
    '''/\*.*0x[0-9a-fA-F]+.*\*/''',
    '''#.*0x[0-9a-fA-F]+''',
]

# Generic exclusions based on file types
[[rules]]
id = "test-file-exclusions"
description = "Generic exclusions for test file types"
[rules.allowlist]
paths = [
    # Rust test modules
    '''.*#\[cfg\(test\)\].*''',
    '''.*#\[test\].*''',

    # Directories and files containing "test"
    '''.*test.*''',
    '''.*Test.*''',
    '''.*TEST.*''',

    # Documentation and examples
    '''.*example.*''',
    '''.*Example.*''',
    '''.*demo.*''',
    '''.*Demo.*''',
]
