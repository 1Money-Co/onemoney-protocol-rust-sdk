name: Lint and Test

on:
  push:
    branches:
      - main
      - master
      - develop
  pull_request:
    branches:
      - main
      - master
      - develop

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

permissions:
  contents: read

jobs:
  lint-and-test:
    name: Lint and Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy
          rustflags: -D warnings

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Check code formatting
        run: cargo fmt --all -- --check

      - name: Check for compilation errors
        run: cargo check --all-targets --all-features

      - name: Run Clippy lints
        run: cargo clippy --all-targets --workspace --lib --examples --all-features --tests --benches -- -D warnings

      - name: Run tests
        run: cargo test --all-features --workspace

      - name: Run documentation tests
        run: cargo test --doc --all-features

      - name: Build examples
        run: cargo build --examples --all-features

      - name: Test examples compilation
        run: |
          cargo check --example accounts_example
          cargo check --example chains_example
          cargo check --example checkpoints_example
          cargo check --example network_examples
          cargo check --example states_example
          cargo check --example tokens_example
          cargo check --example transactions_example

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Run security audit
        run: cargo audit

  check-dependencies:
    name: Check Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install cargo-outdated
        run: cargo install cargo-outdated

      - name: Check for outdated dependencies
        run: cargo outdated --exit-code 1
        continue-on-error: true

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: llvm-tools-preview

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: lcov.info
          fail_ci_if_error: false

  msrv-check:
    name: Minimum Supported Rust Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust MSRV (1.85)
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: "1.85"

      - name: Test with MSRV
        run: cargo check --all-features

  documentation:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Build documentation
        run: cargo doc --all-features --no-deps

      - name: Check for broken links in docs
        run: cargo doc --all-features --no-deps --document-private-items
