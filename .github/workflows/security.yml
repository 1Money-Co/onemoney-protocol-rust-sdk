name: Security Checks

on:
  schedule:
    # Run security checks daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

permissions:
  contents: read
  security-events: write

jobs:
  cargo-audit:
    name: Cargo Security Audit
    runs-on: [self-hosted]
    container:
      image: rust:1.87-bullseye
      env:
        CARGO_TERM_COLOR: always
        RUST_BACKTRACE: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          apt-get update && apt-get install -y \
            build-essential \
            pkg-config \
            libssl-dev \
            git

      - name: Set git safe directory
        run: git config --global --add safe.directory /github/workspace

      - name: Install cargo-audit
        run: cargo install cargo-audit || echo "cargo-audit already installed"


      - name: Run cargo audit
        run: |
          set -euo pipefail
          cargo audit --json | tee audit-results.json

      - name: Upload audit results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cargo-audit-results
          path: audit-results.json

  cargo-deny:
    name: Cargo Deny
    runs-on: [self-hosted]
    container:
      image: rust:1.87-bullseye
      env:
        CARGO_TERM_COLOR: always
        RUST_BACKTRACE: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          apt-get update && apt-get install -y \
            build-essential \
            pkg-config \
            libssl-dev \
            git

      - name: Set git safe directory
        run: git config --global --add safe.directory /github/workspace

      - name: Install cargo-deny
        run: cargo install cargo-deny || echo "cargo-deny already installed"


      - name: Run cargo-deny check
        run: |
          cargo deny --log-level warn check --all-features

  dependency-review:
    name: Dependency Review
    runs-on: [self-hosted]
    container:
      image: rust:1.87-bullseye
      env:
        CARGO_TERM_COLOR: always
        RUST_BACKTRACE: 1
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: [self-hosted]
    container:
      image: rust:1.87-bullseye
      env:
        CARGO_TERM_COLOR: always
        RUST_BACKTRACE: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          apt-get update && apt-get install -y \
            build-essential \
            pkg-config \
            libssl-dev \
            git

      - name: Set git safe directory
        run: git config --global --add safe.directory /github/workspace


      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: rust

      - name: Build for CodeQL
        run: cargo build --all-features

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
